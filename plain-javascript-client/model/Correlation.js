/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.112511
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DataSource', 'model/StudyHtml', 'model/StudyImages', 'model/StudyLinks', 'model/StudyText'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DataSource'), require('./StudyHtml'), require('./StudyImages'), require('./StudyLinks'), require('./StudyText'));
  } else {
    // Browser globals (root is window)
    if (!root.Quantimodo) {
      root.Quantimodo = {};
    }
    root.Quantimodo.Correlation = factory(root.Quantimodo.ApiClient, root.Quantimodo.DataSource, root.Quantimodo.StudyHtml, root.Quantimodo.StudyImages, root.Quantimodo.StudyLinks, root.Quantimodo.StudyText);
  }
}(this, function(ApiClient, DataSource, StudyHtml, StudyImages, StudyLinks, StudyText) {
  'use strict';




  /**
   * The Correlation model module.
   * @module model/Correlation
   * @version 5.8.112511
   */

  /**
   * Constructs a new <code>Correlation</code>.
   * @alias module:model/Correlation
   * @class
   * @param averageDailyHighCause {Number} Ex: 4.19
   * @param averageDailyLowCause {Number} Ex: 1.97
   * @param averageEffect {Number} Ex: 3.0791054117396
   * @param averageEffectFollowingHighCause {Number} Ex: 3.55
   * @param averageEffectFollowingLowCause {Number} Ex: 2.65
   * @param averageForwardPearsonCorrelationOverOnsetDelays {Number} Ex: 0.396
   * @param averageReversePearsonCorrelationOverOnsetDelays {Number} Ex: 0.453667
   * @param averageVote {Number} Ex: 0.9855
   * @param causeChanges {Number} Ex: 164
   * @param causeUserVariableShareUserMeasurements {Number} Ex: 1
   * @param causeVariableName {String} Ex: Sleep Quality
   * @param confidenceInterval {Number} Ex: 0.14344467795996
   * @param confidenceLevel {String} Ex: high
   * @param correlationCoefficient {Number} Ex: 0.538
   * @param createdAt {String} Ex: 2016-12-28 20:47:30 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @param criticalTValue {Number} Calculated Statistic: Ex: 1.646
   * @param direction {String} Ex: higher
   * @param durationOfAction {Number} User-Defined Variable Setting: The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.  Unit: Seconds
   * @param durationOfActionInHours {Number} User-Defined Variable Setting: The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.  Unit: Hours
   * @param effectChanges {Number} Ex: 193
   * @param effectSize {String} Ex: moderately positive
   * @param effectUnit {String} Ex: /5
   * @param effectVariableName {String} Ex: Overall Mood
   * @param experimentEndTime {String} Ex: 2014-07-30 12:50:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @param experimentStartTime {String} Ex: 2012-05-06 21:15:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @param forwardSpearmanCorrelationCoefficient {Number} Ex: 0.528359
   * @param numberOfPairs {Number} Ex: 298
   * @param onsetDelay {Number} Ex: 0
   * @param onsetDelayInHours {Number} Ex: 0
   * @param onsetDelayWithStrongestPearsonCorrelation {Number} Ex: -86400
   * @param onsetDelayWithStrongestPearsonCorrelationInHours {Number} Ex: -24
   * @param optimalPearsonProduct {Number} Ex: 0.68582816186982
   * @param outcomeFillingValue {Number} User-Defined Variable Setting: Ex: -1. Unit: User-specified or common.
   * @param pearsonCorrelationWithNoOnsetDelay {Number} Ex: 0.477
   * @param predictivePearsonCorrelation {Number} Ex: 0.538
   * @param predictivePearsonCorrelationCoefficient {Number} Ex: 0.538
   * @param predictorDataSources {String} Ex: RescueTime
   * @param predictorFillingValue {Number} Ex: -1. Unit: User-specified or common.
   * @param predictorMaximumAllowedValue {Number} Ex: 200. Unit: User-specified or common.
   * @param predictorMinimumAllowedValue {Number} Ex: 30. Unit: User-specified or common.
   * @param predictsHighEffectChange {Number} Ex: 17. Unit: User-specified or common.
   * @param predictsLowEffectChange {Number} Ex: -11. Unit: User-specified or common.
   * @param qmScore {Number} Ex: 0.528
   * @param reversePearsonCorrelationCoefficient {Number} Ex: 0.01377184270977
   * @param shareUserMeasurements {Boolean} Would you like to make this study publicly visible?
   * @param significantDifference {Boolean} Ex: 1
   * @param statisticalSignificance {Number} Ex: 0.9813
   * @param strengthLevel {String} Ex: moderate
   * @param strongestPearsonCorrelationCoefficient {Number} Ex: 0.613
   * @param tValue {Number} Ex: 9.6986079652717
   * @param updatedAt {String} Ex: 2017-05-06 15:40:38 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @param userId {Number} Ex: 230
   * @param userVote {Number} Ex: 1
   * @param valuePredictingHighOutcome {Number} Ex: 4.14
   * @param valuePredictingLowOutcome {Number} Ex: 3.03
   */
  var exports = function(averageDailyHighCause, averageDailyLowCause, averageEffect, averageEffectFollowingHighCause, averageEffectFollowingLowCause, averageForwardPearsonCorrelationOverOnsetDelays, averageReversePearsonCorrelationOverOnsetDelays, averageVote, causeChanges, causeUserVariableShareUserMeasurements, causeVariableName, confidenceInterval, confidenceLevel, correlationCoefficient, createdAt, criticalTValue, direction, durationOfAction, durationOfActionInHours, effectChanges, effectSize, effectUnit, effectVariableName, experimentEndTime, experimentStartTime, forwardSpearmanCorrelationCoefficient, numberOfPairs, onsetDelay, onsetDelayInHours, onsetDelayWithStrongestPearsonCorrelation, onsetDelayWithStrongestPearsonCorrelationInHours, optimalPearsonProduct, outcomeFillingValue, pearsonCorrelationWithNoOnsetDelay, predictivePearsonCorrelation, predictivePearsonCorrelationCoefficient, predictorDataSources, predictorFillingValue, predictorMaximumAllowedValue, predictorMinimumAllowedValue, predictsHighEffectChange, predictsLowEffectChange, qmScore, reversePearsonCorrelationCoefficient, shareUserMeasurements, significantDifference, statisticalSignificance, strengthLevel, strongestPearsonCorrelationCoefficient, tValue, updatedAt, userId, userVote, valuePredictingHighOutcome, valuePredictingLowOutcome) {
    var _this = this;

    _this['averageDailyHighCause'] = averageDailyHighCause;
    _this['averageDailyLowCause'] = averageDailyLowCause;
    _this['averageEffect'] = averageEffect;
    _this['averageEffectFollowingHighCause'] = averageEffectFollowingHighCause;
    _this['averageEffectFollowingLowCause'] = averageEffectFollowingLowCause;
    _this['averageForwardPearsonCorrelationOverOnsetDelays'] = averageForwardPearsonCorrelationOverOnsetDelays;
    _this['averageReversePearsonCorrelationOverOnsetDelays'] = averageReversePearsonCorrelationOverOnsetDelays;
    _this['averageVote'] = averageVote;
    _this['causeChanges'] = causeChanges;

    _this['causeUserVariableShareUserMeasurements'] = causeUserVariableShareUserMeasurements;






    _this['causeVariableName'] = causeVariableName;
    _this['confidenceInterval'] = confidenceInterval;
    _this['confidenceLevel'] = confidenceLevel;
    _this['correlationCoefficient'] = correlationCoefficient;

    _this['createdAt'] = createdAt;
    _this['criticalTValue'] = criticalTValue;
    _this['direction'] = direction;
    _this['durationOfAction'] = durationOfAction;
    _this['durationOfActionInHours'] = durationOfActionInHours;



    _this['effectChanges'] = effectChanges;

    _this['effectSize'] = effectSize;
    _this['effectUnit'] = effectUnit;










    _this['effectVariableName'] = effectVariableName;
    _this['experimentEndTime'] = experimentEndTime;
    _this['experimentStartTime'] = experimentStartTime;
    _this['forwardSpearmanCorrelationCoefficient'] = forwardSpearmanCorrelationCoefficient;
    _this['numberOfPairs'] = numberOfPairs;
    _this['onsetDelay'] = onsetDelay;
    _this['onsetDelayInHours'] = onsetDelayInHours;
    _this['onsetDelayWithStrongestPearsonCorrelation'] = onsetDelayWithStrongestPearsonCorrelation;
    _this['onsetDelayWithStrongestPearsonCorrelationInHours'] = onsetDelayWithStrongestPearsonCorrelationInHours;
    _this['optimalPearsonProduct'] = optimalPearsonProduct;
    _this['outcomeFillingValue'] = outcomeFillingValue;


    _this['pearsonCorrelationWithNoOnsetDelay'] = pearsonCorrelationWithNoOnsetDelay;
    _this['predictivePearsonCorrelation'] = predictivePearsonCorrelation;
    _this['predictivePearsonCorrelationCoefficient'] = predictivePearsonCorrelationCoefficient;
    _this['predictorDataSources'] = predictorDataSources;
    _this['predictorFillingValue'] = predictorFillingValue;
    _this['predictorMaximumAllowedValue'] = predictorMaximumAllowedValue;
    _this['predictorMinimumAllowedValue'] = predictorMinimumAllowedValue;
    _this['predictsHighEffectChange'] = predictsHighEffectChange;
    _this['predictsLowEffectChange'] = predictsLowEffectChange;

    _this['qmScore'] = qmScore;
    _this['reversePearsonCorrelationCoefficient'] = reversePearsonCorrelationCoefficient;
    _this['shareUserMeasurements'] = shareUserMeasurements;


    _this['significantDifference'] = significantDifference;
    _this['statisticalSignificance'] = statisticalSignificance;
    _this['strengthLevel'] = strengthLevel;
    _this['strongestPearsonCorrelationCoefficient'] = strongestPearsonCorrelationCoefficient;




    _this['tValue'] = tValue;
    _this['updatedAt'] = updatedAt;
    _this['userId'] = userId;
    _this['userVote'] = userVote;
    _this['valuePredictingHighOutcome'] = valuePredictingHighOutcome;
    _this['valuePredictingLowOutcome'] = valuePredictingLowOutcome;

















  };

  /**
   * Constructs a <code>Correlation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Correlation} obj Optional instance to populate.
   * @return {module:model/Correlation} The populated <code>Correlation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('averageDailyHighCause')) {
        obj['averageDailyHighCause'] = ApiClient.convertToType(data['averageDailyHighCause'], 'Number');
      }
      if (data.hasOwnProperty('averageDailyLowCause')) {
        obj['averageDailyLowCause'] = ApiClient.convertToType(data['averageDailyLowCause'], 'Number');
      }
      if (data.hasOwnProperty('averageEffect')) {
        obj['averageEffect'] = ApiClient.convertToType(data['averageEffect'], 'Number');
      }
      if (data.hasOwnProperty('averageEffectFollowingHighCause')) {
        obj['averageEffectFollowingHighCause'] = ApiClient.convertToType(data['averageEffectFollowingHighCause'], 'Number');
      }
      if (data.hasOwnProperty('averageEffectFollowingLowCause')) {
        obj['averageEffectFollowingLowCause'] = ApiClient.convertToType(data['averageEffectFollowingLowCause'], 'Number');
      }
      if (data.hasOwnProperty('averageForwardPearsonCorrelationOverOnsetDelays')) {
        obj['averageForwardPearsonCorrelationOverOnsetDelays'] = ApiClient.convertToType(data['averageForwardPearsonCorrelationOverOnsetDelays'], 'Number');
      }
      if (data.hasOwnProperty('averageReversePearsonCorrelationOverOnsetDelays')) {
        obj['averageReversePearsonCorrelationOverOnsetDelays'] = ApiClient.convertToType(data['averageReversePearsonCorrelationOverOnsetDelays'], 'Number');
      }
      if (data.hasOwnProperty('averageVote')) {
        obj['averageVote'] = ApiClient.convertToType(data['averageVote'], 'Number');
      }
      if (data.hasOwnProperty('causeChanges')) {
        obj['causeChanges'] = ApiClient.convertToType(data['causeChanges'], 'Number');
      }
      if (data.hasOwnProperty('causeDataSource')) {
        obj['causeDataSource'] = DataSource.constructFromObject(data['causeDataSource']);
      }
      if (data.hasOwnProperty('causeUserVariableShareUserMeasurements')) {
        obj['causeUserVariableShareUserMeasurements'] = ApiClient.convertToType(data['causeUserVariableShareUserMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableCategoryId')) {
        obj['causeVariableCategoryId'] = ApiClient.convertToType(data['causeVariableCategoryId'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableCategoryName')) {
        obj['causeVariableCategoryName'] = ApiClient.convertToType(data['causeVariableCategoryName'], 'String');
      }
      if (data.hasOwnProperty('causeVariableCombinationOperation')) {
        obj['causeVariableCombinationOperation'] = ApiClient.convertToType(data['causeVariableCombinationOperation'], 'String');
      }
      if (data.hasOwnProperty('causeVariableUnitAbbreviatedName')) {
        obj['causeVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['causeVariableUnitAbbreviatedName'], 'String');
      }
      if (data.hasOwnProperty('causeVariableId')) {
        obj['causeVariableId'] = ApiClient.convertToType(data['causeVariableId'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableMostCommonConnectorId')) {
        obj['causeVariableMostCommonConnectorId'] = ApiClient.convertToType(data['causeVariableMostCommonConnectorId'], 'Number');
      }
      if (data.hasOwnProperty('causeVariableName')) {
        obj['causeVariableName'] = ApiClient.convertToType(data['causeVariableName'], 'String');
      }
      if (data.hasOwnProperty('confidenceInterval')) {
        obj['confidenceInterval'] = ApiClient.convertToType(data['confidenceInterval'], 'Number');
      }
      if (data.hasOwnProperty('confidenceLevel')) {
        obj['confidenceLevel'] = ApiClient.convertToType(data['confidenceLevel'], 'String');
      }
      if (data.hasOwnProperty('correlationCoefficient')) {
        obj['correlationCoefficient'] = ApiClient.convertToType(data['correlationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('correlationIsContradictoryToOptimalValues')) {
        obj['correlationIsContradictoryToOptimalValues'] = ApiClient.convertToType(data['correlationIsContradictoryToOptimalValues'], 'Boolean');
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
      }
      if (data.hasOwnProperty('criticalTValue')) {
        obj['criticalTValue'] = ApiClient.convertToType(data['criticalTValue'], 'Number');
      }
      if (data.hasOwnProperty('direction')) {
        obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
      }
      if (data.hasOwnProperty('durationOfAction')) {
        obj['durationOfAction'] = ApiClient.convertToType(data['durationOfAction'], 'Number');
      }
      if (data.hasOwnProperty('durationOfActionInHours')) {
        obj['durationOfActionInHours'] = ApiClient.convertToType(data['durationOfActionInHours'], 'Number');
      }
      if (data.hasOwnProperty('degreesOfFreedom')) {
        obj['degreesOfFreedom'] = ApiClient.convertToType(data['degreesOfFreedom'], 'Number');
      }
      if (data.hasOwnProperty('effectNumberOfProcessedDailyMeasurements')) {
        obj['effectNumberOfProcessedDailyMeasurements'] = ApiClient.convertToType(data['effectNumberOfProcessedDailyMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('error')) {
        obj['error'] = ApiClient.convertToType(data['error'], 'String');
      }
      if (data.hasOwnProperty('effectChanges')) {
        obj['effectChanges'] = ApiClient.convertToType(data['effectChanges'], 'Number');
      }
      if (data.hasOwnProperty('effectDataSource')) {
        obj['effectDataSource'] = DataSource.constructFromObject(data['effectDataSource']);
      }
      if (data.hasOwnProperty('effectSize')) {
        obj['effectSize'] = ApiClient.convertToType(data['effectSize'], 'String');
      }
      if (data.hasOwnProperty('effectUnit')) {
        obj['effectUnit'] = ApiClient.convertToType(data['effectUnit'], 'String');
      }
      if (data.hasOwnProperty('effectUserVariableShareUserMeasurements')) {
        obj['effectUserVariableShareUserMeasurements'] = ApiClient.convertToType(data['effectUserVariableShareUserMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableCategoryId')) {
        obj['effectVariableCategoryId'] = ApiClient.convertToType(data['effectVariableCategoryId'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableCategoryName')) {
        obj['effectVariableCategoryName'] = ApiClient.convertToType(data['effectVariableCategoryName'], 'String');
      }
      if (data.hasOwnProperty('effectVariableCombinationOperation')) {
        obj['effectVariableCombinationOperation'] = ApiClient.convertToType(data['effectVariableCombinationOperation'], 'String');
      }
      if (data.hasOwnProperty('effectVariableCommonAlias')) {
        obj['effectVariableCommonAlias'] = ApiClient.convertToType(data['effectVariableCommonAlias'], 'String');
      }
      if (data.hasOwnProperty('effectVariableUnitAbbreviatedName')) {
        obj['effectVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['effectVariableUnitAbbreviatedName'], 'String');
      }
      if (data.hasOwnProperty('effectVariableUnitId')) {
        obj['effectVariableUnitId'] = ApiClient.convertToType(data['effectVariableUnitId'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableUnitName')) {
        obj['effectVariableUnitName'] = ApiClient.convertToType(data['effectVariableUnitName'], 'String');
      }
      if (data.hasOwnProperty('effectVariableId')) {
        obj['effectVariableId'] = ApiClient.convertToType(data['effectVariableId'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableMostCommonConnectorId')) {
        obj['effectVariableMostCommonConnectorId'] = ApiClient.convertToType(data['effectVariableMostCommonConnectorId'], 'Number');
      }
      if (data.hasOwnProperty('effectVariableName')) {
        obj['effectVariableName'] = ApiClient.convertToType(data['effectVariableName'], 'String');
      }
      if (data.hasOwnProperty('experimentEndTime')) {
        obj['experimentEndTime'] = ApiClient.convertToType(data['experimentEndTime'], 'String');
      }
      if (data.hasOwnProperty('experimentStartTime')) {
        obj['experimentStartTime'] = ApiClient.convertToType(data['experimentStartTime'], 'String');
      }
      if (data.hasOwnProperty('forwardSpearmanCorrelationCoefficient')) {
        obj['forwardSpearmanCorrelationCoefficient'] = ApiClient.convertToType(data['forwardSpearmanCorrelationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('numberOfPairs')) {
        obj['numberOfPairs'] = ApiClient.convertToType(data['numberOfPairs'], 'Number');
      }
      if (data.hasOwnProperty('onsetDelay')) {
        obj['onsetDelay'] = ApiClient.convertToType(data['onsetDelay'], 'Number');
      }
      if (data.hasOwnProperty('onsetDelayInHours')) {
        obj['onsetDelayInHours'] = ApiClient.convertToType(data['onsetDelayInHours'], 'Number');
      }
      if (data.hasOwnProperty('onsetDelayWithStrongestPearsonCorrelation')) {
        obj['onsetDelayWithStrongestPearsonCorrelation'] = ApiClient.convertToType(data['onsetDelayWithStrongestPearsonCorrelation'], 'Number');
      }
      if (data.hasOwnProperty('onsetDelayWithStrongestPearsonCorrelationInHours')) {
        obj['onsetDelayWithStrongestPearsonCorrelationInHours'] = ApiClient.convertToType(data['onsetDelayWithStrongestPearsonCorrelationInHours'], 'Number');
      }
      if (data.hasOwnProperty('optimalPearsonProduct')) {
        obj['optimalPearsonProduct'] = ApiClient.convertToType(data['optimalPearsonProduct'], 'Number');
      }
      if (data.hasOwnProperty('outcomeFillingValue')) {
        obj['outcomeFillingValue'] = ApiClient.convertToType(data['outcomeFillingValue'], 'Number');
      }
      if (data.hasOwnProperty('outcomeMaximumAllowedValue')) {
        obj['outcomeMaximumAllowedValue'] = ApiClient.convertToType(data['outcomeMaximumAllowedValue'], 'Number');
      }
      if (data.hasOwnProperty('outcomeMinimumAllowedValue')) {
        obj['outcomeMinimumAllowedValue'] = ApiClient.convertToType(data['outcomeMinimumAllowedValue'], 'Number');
      }
      if (data.hasOwnProperty('pearsonCorrelationWithNoOnsetDelay')) {
        obj['pearsonCorrelationWithNoOnsetDelay'] = ApiClient.convertToType(data['pearsonCorrelationWithNoOnsetDelay'], 'Number');
      }
      if (data.hasOwnProperty('predictivePearsonCorrelation')) {
        obj['predictivePearsonCorrelation'] = ApiClient.convertToType(data['predictivePearsonCorrelation'], 'Number');
      }
      if (data.hasOwnProperty('predictivePearsonCorrelationCoefficient')) {
        obj['predictivePearsonCorrelationCoefficient'] = ApiClient.convertToType(data['predictivePearsonCorrelationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('predictorDataSources')) {
        obj['predictorDataSources'] = ApiClient.convertToType(data['predictorDataSources'], 'String');
      }
      if (data.hasOwnProperty('predictorFillingValue')) {
        obj['predictorFillingValue'] = ApiClient.convertToType(data['predictorFillingValue'], 'Number');
      }
      if (data.hasOwnProperty('predictorMaximumAllowedValue')) {
        obj['predictorMaximumAllowedValue'] = ApiClient.convertToType(data['predictorMaximumAllowedValue'], 'Number');
      }
      if (data.hasOwnProperty('predictorMinimumAllowedValue')) {
        obj['predictorMinimumAllowedValue'] = ApiClient.convertToType(data['predictorMinimumAllowedValue'], 'Number');
      }
      if (data.hasOwnProperty('predictsHighEffectChange')) {
        obj['predictsHighEffectChange'] = ApiClient.convertToType(data['predictsHighEffectChange'], 'Number');
      }
      if (data.hasOwnProperty('predictsLowEffectChange')) {
        obj['predictsLowEffectChange'] = ApiClient.convertToType(data['predictsLowEffectChange'], 'Number');
      }
      if (data.hasOwnProperty('pValue')) {
        obj['pValue'] = ApiClient.convertToType(data['pValue'], 'Number');
      }
      if (data.hasOwnProperty('qmScore')) {
        obj['qmScore'] = ApiClient.convertToType(data['qmScore'], 'Number');
      }
      if (data.hasOwnProperty('reversePearsonCorrelationCoefficient')) {
        obj['reversePearsonCorrelationCoefficient'] = ApiClient.convertToType(data['reversePearsonCorrelationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('shareUserMeasurements')) {
        obj['shareUserMeasurements'] = ApiClient.convertToType(data['shareUserMeasurements'], 'Boolean');
      }
      if (data.hasOwnProperty('sharingDescription')) {
        obj['sharingDescription'] = ApiClient.convertToType(data['sharingDescription'], 'String');
      }
      if (data.hasOwnProperty('sharingTitle')) {
        obj['sharingTitle'] = ApiClient.convertToType(data['sharingTitle'], 'String');
      }
      if (data.hasOwnProperty('significantDifference')) {
        obj['significantDifference'] = ApiClient.convertToType(data['significantDifference'], 'Boolean');
      }
      if (data.hasOwnProperty('statisticalSignificance')) {
        obj['statisticalSignificance'] = ApiClient.convertToType(data['statisticalSignificance'], 'Number');
      }
      if (data.hasOwnProperty('strengthLevel')) {
        obj['strengthLevel'] = ApiClient.convertToType(data['strengthLevel'], 'String');
      }
      if (data.hasOwnProperty('strongestPearsonCorrelationCoefficient')) {
        obj['strongestPearsonCorrelationCoefficient'] = ApiClient.convertToType(data['strongestPearsonCorrelationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('studyHtml')) {
        obj['studyHtml'] = StudyHtml.constructFromObject(data['studyHtml']);
      }
      if (data.hasOwnProperty('studyImages')) {
        obj['studyImages'] = StudyImages.constructFromObject(data['studyImages']);
      }
      if (data.hasOwnProperty('studyLinks')) {
        obj['studyLinks'] = StudyLinks.constructFromObject(data['studyLinks']);
      }
      if (data.hasOwnProperty('studyText')) {
        obj['studyText'] = StudyText.constructFromObject(data['studyText']);
      }
      if (data.hasOwnProperty('tValue')) {
        obj['tValue'] = ApiClient.convertToType(data['tValue'], 'Number');
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
      }
      if (data.hasOwnProperty('userVote')) {
        obj['userVote'] = ApiClient.convertToType(data['userVote'], 'Number');
      }
      if (data.hasOwnProperty('valuePredictingHighOutcome')) {
        obj['valuePredictingHighOutcome'] = ApiClient.convertToType(data['valuePredictingHighOutcome'], 'Number');
      }
      if (data.hasOwnProperty('valuePredictingLowOutcome')) {
        obj['valuePredictingLowOutcome'] = ApiClient.convertToType(data['valuePredictingLowOutcome'], 'Number');
      }
      if (data.hasOwnProperty('outcomeDataSources')) {
        obj['outcomeDataSources'] = ApiClient.convertToType(data['outcomeDataSources'], 'String');
      }
      if (data.hasOwnProperty('principalInvestigator')) {
        obj['principalInvestigator'] = ApiClient.convertToType(data['principalInvestigator'], 'String');
      }
      if (data.hasOwnProperty('reverseCorrelation')) {
        obj['reverseCorrelation'] = ApiClient.convertToType(data['reverseCorrelation'], 'Number');
      }
      if (data.hasOwnProperty('averagePearsonCorrelationCoefficientOverOnsetDelays')) {
        obj['averagePearsonCorrelationCoefficientOverOnsetDelays'] = ApiClient.convertToType(data['averagePearsonCorrelationCoefficientOverOnsetDelays'], 'String');
      }
      if (data.hasOwnProperty('causeNumberOfRawMeasurements')) {
        obj['causeNumberOfRawMeasurements'] = ApiClient.convertToType(data['causeNumberOfRawMeasurements'], 'Number');
      }
      if (data.hasOwnProperty('correlationsOverDurationsOfAction')) {
        obj['correlationsOverDurationsOfAction'] = ApiClient.convertToType(data['correlationsOverDurationsOfAction'], 'String');
      }
      if (data.hasOwnProperty('correlationsOverDurationsOfActionChartConfig')) {
        obj['correlationsOverDurationsOfActionChartConfig'] = ApiClient.convertToType(data['correlationsOverDurationsOfActionChartConfig'], 'String');
      }
      if (data.hasOwnProperty('correlationsOverOnsetDelaysChartConfig')) {
        obj['correlationsOverOnsetDelaysChartConfig'] = ApiClient.convertToType(data['correlationsOverOnsetDelaysChartConfig'], 'String');
      }
      if (data.hasOwnProperty('numberOfUsers')) {
        obj['numberOfUsers'] = ApiClient.convertToType(data['numberOfUsers'], 'Number');
      }
      if (data.hasOwnProperty('rawCauseMeasurementSignificance')) {
        obj['rawCauseMeasurementSignificance'] = ApiClient.convertToType(data['rawCauseMeasurementSignificance'], 'Number');
      }
      if (data.hasOwnProperty('rawEffectMeasurementSignificance')) {
        obj['rawEffectMeasurementSignificance'] = ApiClient.convertToType(data['rawEffectMeasurementSignificance'], 'Number');
      }
      if (data.hasOwnProperty('reversePairsCount')) {
        obj['reversePairsCount'] = ApiClient.convertToType(data['reversePairsCount'], 'String');
      }
      if (data.hasOwnProperty('voteStatisticalSignificance')) {
        obj['voteStatisticalSignificance'] = ApiClient.convertToType(data['voteStatisticalSignificance'], 'Number');
      }
      if (data.hasOwnProperty('aggregateQMScore')) {
        obj['aggregateQMScore'] = ApiClient.convertToType(data['aggregateQMScore'], 'Number');
      }
      if (data.hasOwnProperty('forwardPearsonCorrelationCoefficient')) {
        obj['forwardPearsonCorrelationCoefficient'] = ApiClient.convertToType(data['forwardPearsonCorrelationCoefficient'], 'Number');
      }
      if (data.hasOwnProperty('numberOfCorrelations')) {
        obj['numberOfCorrelations'] = ApiClient.convertToType(data['numberOfCorrelations'], 'Number');
      }
      if (data.hasOwnProperty('vote')) {
        obj['vote'] = ApiClient.convertToType(data['vote'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Ex: 4.19
   * @member {Number} averageDailyHighCause
   */
  exports.prototype['averageDailyHighCause'] = undefined;
  /**
   * Ex: 1.97
   * @member {Number} averageDailyLowCause
   */
  exports.prototype['averageDailyLowCause'] = undefined;
  /**
   * Ex: 3.0791054117396
   * @member {Number} averageEffect
   */
  exports.prototype['averageEffect'] = undefined;
  /**
   * Ex: 3.55
   * @member {Number} averageEffectFollowingHighCause
   */
  exports.prototype['averageEffectFollowingHighCause'] = undefined;
  /**
   * Ex: 2.65
   * @member {Number} averageEffectFollowingLowCause
   */
  exports.prototype['averageEffectFollowingLowCause'] = undefined;
  /**
   * Ex: 0.396
   * @member {Number} averageForwardPearsonCorrelationOverOnsetDelays
   */
  exports.prototype['averageForwardPearsonCorrelationOverOnsetDelays'] = undefined;
  /**
   * Ex: 0.453667
   * @member {Number} averageReversePearsonCorrelationOverOnsetDelays
   */
  exports.prototype['averageReversePearsonCorrelationOverOnsetDelays'] = undefined;
  /**
   * Ex: 0.9855
   * @member {Number} averageVote
   */
  exports.prototype['averageVote'] = undefined;
  /**
   * Ex: 164
   * @member {Number} causeChanges
   */
  exports.prototype['causeChanges'] = undefined;
  /**
   * @member {module:model/DataSource} causeDataSource
   */
  exports.prototype['causeDataSource'] = undefined;
  /**
   * Ex: 1
   * @member {Number} causeUserVariableShareUserMeasurements
   */
  exports.prototype['causeUserVariableShareUserMeasurements'] = undefined;
  /**
   * Ex: 6
   * @member {Number} causeVariableCategoryId
   */
  exports.prototype['causeVariableCategoryId'] = undefined;
  /**
   * Ex: Sleep
   * @member {String} causeVariableCategoryName
   */
  exports.prototype['causeVariableCategoryName'] = undefined;
  /**
   * Ex: MEAN
   * @member {String} causeVariableCombinationOperation
   */
  exports.prototype['causeVariableCombinationOperation'] = undefined;
  /**
   * Ex: /5
   * @member {String} causeVariableUnitAbbreviatedName
   */
  exports.prototype['causeVariableUnitAbbreviatedName'] = undefined;
  /**
   * Ex: 1448
   * @member {Number} causeVariableId
   */
  exports.prototype['causeVariableId'] = undefined;
  /**
   * Ex: 6
   * @member {Number} causeVariableMostCommonConnectorId
   */
  exports.prototype['causeVariableMostCommonConnectorId'] = undefined;
  /**
   * Ex: Sleep Quality
   * @member {String} causeVariableName
   */
  exports.prototype['causeVariableName'] = undefined;
  /**
   * Ex: 0.14344467795996
   * @member {Number} confidenceInterval
   */
  exports.prototype['confidenceInterval'] = undefined;
  /**
   * Ex: high
   * @member {String} confidenceLevel
   */
  exports.prototype['confidenceLevel'] = undefined;
  /**
   * Ex: 0.538
   * @member {Number} correlationCoefficient
   */
  exports.prototype['correlationCoefficient'] = undefined;
  /**
   * Ex: false
   * @member {Boolean} correlationIsContradictoryToOptimalValues
   */
  exports.prototype['correlationIsContradictoryToOptimalValues'] = undefined;
  /**
   * Ex: 2016-12-28 20:47:30 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @member {String} createdAt
   */
  exports.prototype['createdAt'] = undefined;
  /**
   * Calculated Statistic: Ex: 1.646
   * @member {Number} criticalTValue
   */
  exports.prototype['criticalTValue'] = undefined;
  /**
   * Ex: higher
   * @member {String} direction
   */
  exports.prototype['direction'] = undefined;
  /**
   * User-Defined Variable Setting: The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.  Unit: Seconds
   * @member {Number} durationOfAction
   */
  exports.prototype['durationOfAction'] = undefined;
  /**
   * User-Defined Variable Setting: The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.  Unit: Hours
   * @member {Number} durationOfActionInHours
   */
  exports.prototype['durationOfActionInHours'] = undefined;
  /**
   * Ex: 200
   * @member {Number} degreesOfFreedom
   */
  exports.prototype['degreesOfFreedom'] = undefined;
  /**
   * Ex: 145
   * @member {Number} effectNumberOfProcessedDailyMeasurements
   */
  exports.prototype['effectNumberOfProcessedDailyMeasurements'] = undefined;
  /**
   * Ex: optimalPearsonProduct is not defined
   * @member {String} error
   */
  exports.prototype['error'] = undefined;
  /**
   * Ex: 193
   * @member {Number} effectChanges
   */
  exports.prototype['effectChanges'] = undefined;
  /**
   * @member {module:model/DataSource} effectDataSource
   */
  exports.prototype['effectDataSource'] = undefined;
  /**
   * Ex: moderately positive
   * @member {String} effectSize
   */
  exports.prototype['effectSize'] = undefined;
  /**
   * Ex: /5
   * @member {String} effectUnit
   */
  exports.prototype['effectUnit'] = undefined;
  /**
   * Ex: 1
   * @member {Number} effectUserVariableShareUserMeasurements
   */
  exports.prototype['effectUserVariableShareUserMeasurements'] = undefined;
  /**
   * Ex: 1
   * @member {Number} effectVariableCategoryId
   */
  exports.prototype['effectVariableCategoryId'] = undefined;
  /**
   * Ex: Emotions
   * @member {String} effectVariableCategoryName
   */
  exports.prototype['effectVariableCategoryName'] = undefined;
  /**
   * Ex: MEAN
   * @member {String} effectVariableCombinationOperation
   */
  exports.prototype['effectVariableCombinationOperation'] = undefined;
  /**
   * Ex: Mood_(psychology)
   * @member {String} effectVariableCommonAlias
   */
  exports.prototype['effectVariableCommonAlias'] = undefined;
  /**
   * Ex: /5
   * @member {String} effectVariableUnitAbbreviatedName
   */
  exports.prototype['effectVariableUnitAbbreviatedName'] = undefined;
  /**
   * Ex: 10
   * @member {Number} effectVariableUnitId
   */
  exports.prototype['effectVariableUnitId'] = undefined;
  /**
   * Ex: 1 to 5 Rating
   * @member {String} effectVariableUnitName
   */
  exports.prototype['effectVariableUnitName'] = undefined;
  /**
   * Ex: 1398
   * @member {Number} effectVariableId
   */
  exports.prototype['effectVariableId'] = undefined;
  /**
   * Ex: 10
   * @member {Number} effectVariableMostCommonConnectorId
   */
  exports.prototype['effectVariableMostCommonConnectorId'] = undefined;
  /**
   * Ex: Overall Mood
   * @member {String} effectVariableName
   */
  exports.prototype['effectVariableName'] = undefined;
  /**
   * Ex: 2014-07-30 12:50:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @member {String} experimentEndTime
   */
  exports.prototype['experimentEndTime'] = undefined;
  /**
   * Ex: 2012-05-06 21:15:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @member {String} experimentStartTime
   */
  exports.prototype['experimentStartTime'] = undefined;
  /**
   * Ex: 0.528359
   * @member {Number} forwardSpearmanCorrelationCoefficient
   */
  exports.prototype['forwardSpearmanCorrelationCoefficient'] = undefined;
  /**
   * Ex: 298
   * @member {Number} numberOfPairs
   */
  exports.prototype['numberOfPairs'] = undefined;
  /**
   * Ex: 0
   * @member {Number} onsetDelay
   */
  exports.prototype['onsetDelay'] = undefined;
  /**
   * Ex: 0
   * @member {Number} onsetDelayInHours
   */
  exports.prototype['onsetDelayInHours'] = undefined;
  /**
   * Ex: -86400
   * @member {Number} onsetDelayWithStrongestPearsonCorrelation
   */
  exports.prototype['onsetDelayWithStrongestPearsonCorrelation'] = undefined;
  /**
   * Ex: -24
   * @member {Number} onsetDelayWithStrongestPearsonCorrelationInHours
   */
  exports.prototype['onsetDelayWithStrongestPearsonCorrelationInHours'] = undefined;
  /**
   * Ex: 0.68582816186982
   * @member {Number} optimalPearsonProduct
   */
  exports.prototype['optimalPearsonProduct'] = undefined;
  /**
   * User-Defined Variable Setting: Ex: -1. Unit: User-specified or common.
   * @member {Number} outcomeFillingValue
   */
  exports.prototype['outcomeFillingValue'] = undefined;
  /**
   * User-Defined Variable Setting: Ex: 23. Unit: User-specified or common.
   * @member {Number} outcomeMaximumAllowedValue
   */
  exports.prototype['outcomeMaximumAllowedValue'] = undefined;
  /**
   * User-Defined Variable Setting: Ex: 0.1. Unit: User-specified or common.
   * @member {Number} outcomeMinimumAllowedValue
   */
  exports.prototype['outcomeMinimumAllowedValue'] = undefined;
  /**
   * Ex: 0.477
   * @member {Number} pearsonCorrelationWithNoOnsetDelay
   */
  exports.prototype['pearsonCorrelationWithNoOnsetDelay'] = undefined;
  /**
   * Ex: 0.538
   * @member {Number} predictivePearsonCorrelation
   */
  exports.prototype['predictivePearsonCorrelation'] = undefined;
  /**
   * Ex: 0.538
   * @member {Number} predictivePearsonCorrelationCoefficient
   */
  exports.prototype['predictivePearsonCorrelationCoefficient'] = undefined;
  /**
   * Ex: RescueTime
   * @member {String} predictorDataSources
   */
  exports.prototype['predictorDataSources'] = undefined;
  /**
   * Ex: -1. Unit: User-specified or common.
   * @member {Number} predictorFillingValue
   */
  exports.prototype['predictorFillingValue'] = undefined;
  /**
   * Ex: 200. Unit: User-specified or common.
   * @member {Number} predictorMaximumAllowedValue
   */
  exports.prototype['predictorMaximumAllowedValue'] = undefined;
  /**
   * Ex: 30. Unit: User-specified or common.
   * @member {Number} predictorMinimumAllowedValue
   */
  exports.prototype['predictorMinimumAllowedValue'] = undefined;
  /**
   * Ex: 17. Unit: User-specified or common.
   * @member {Number} predictsHighEffectChange
   */
  exports.prototype['predictsHighEffectChange'] = undefined;
  /**
   * Ex: -11. Unit: User-specified or common.
   * @member {Number} predictsLowEffectChange
   */
  exports.prototype['predictsLowEffectChange'] = undefined;
  /**
   * Ex: 0.39628900511586
   * @member {Number} pValue
   */
  exports.prototype['pValue'] = undefined;
  /**
   * Ex: 0.528
   * @member {Number} qmScore
   */
  exports.prototype['qmScore'] = undefined;
  /**
   * Ex: 0.01377184270977
   * @member {Number} reversePearsonCorrelationCoefficient
   */
  exports.prototype['reversePearsonCorrelationCoefficient'] = undefined;
  /**
   * Would you like to make this study publicly visible?
   * @member {Boolean} shareUserMeasurements
   */
  exports.prototype['shareUserMeasurements'] = undefined;
  /**
   * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood
   * @member {String} sharingDescription
   */
  exports.prototype['sharingDescription'] = undefined;
  /**
   * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood
   * @member {String} sharingTitle
   */
  exports.prototype['sharingTitle'] = undefined;
  /**
   * Ex: 1
   * @member {Boolean} significantDifference
   */
  exports.prototype['significantDifference'] = undefined;
  /**
   * Ex: 0.9813
   * @member {Number} statisticalSignificance
   */
  exports.prototype['statisticalSignificance'] = undefined;
  /**
   * Ex: moderate
   * @member {String} strengthLevel
   */
  exports.prototype['strengthLevel'] = undefined;
  /**
   * Ex: 0.613
   * @member {Number} strongestPearsonCorrelationCoefficient
   */
  exports.prototype['strongestPearsonCorrelationCoefficient'] = undefined;
  /**
   * @member {module:model/StudyHtml} studyHtml
   */
  exports.prototype['studyHtml'] = undefined;
  /**
   * @member {module:model/StudyImages} studyImages
   */
  exports.prototype['studyImages'] = undefined;
  /**
   * @member {module:model/StudyLinks} studyLinks
   */
  exports.prototype['studyLinks'] = undefined;
  /**
   * @member {module:model/StudyText} studyText
   */
  exports.prototype['studyText'] = undefined;
  /**
   * Ex: 9.6986079652717
   * @member {Number} tValue
   */
  exports.prototype['tValue'] = undefined;
  /**
   * Ex: 2017-05-06 15:40:38 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   * @member {String} updatedAt
   */
  exports.prototype['updatedAt'] = undefined;
  /**
   * Ex: 230
   * @member {Number} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * Ex: 1
   * @member {Number} userVote
   */
  exports.prototype['userVote'] = undefined;
  /**
   * Ex: 4.14
   * @member {Number} valuePredictingHighOutcome
   */
  exports.prototype['valuePredictingHighOutcome'] = undefined;
  /**
   * Ex: 3.03
   * @member {Number} valuePredictingLowOutcome
   */
  exports.prototype['valuePredictingLowOutcome'] = undefined;
  /**
   * original name of the cause.
   * @member {String} outcomeDataSources
   */
  exports.prototype['outcomeDataSources'] = undefined;
  /**
   * Mike Sinn
   * @member {String} principalInvestigator
   */
  exports.prototype['principalInvestigator'] = undefined;
  /**
   * Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation.
   * @member {Number} reverseCorrelation
   */
  exports.prototype['reverseCorrelation'] = undefined;
  /**
   * Ex: 
   * @member {String} averagePearsonCorrelationCoefficientOverOnsetDelays
   */
  exports.prototype['averagePearsonCorrelationCoefficientOverOnsetDelays'] = undefined;
  /**
   * Ex: 14764
   * @member {Number} causeNumberOfRawMeasurements
   */
  exports.prototype['causeNumberOfRawMeasurements'] = undefined;
  /**
   * Ex: 
   * @member {String} correlationsOverDurationsOfAction
   */
  exports.prototype['correlationsOverDurationsOfAction'] = undefined;
  /**
   * Ex: 
   * @member {String} correlationsOverDurationsOfActionChartConfig
   */
  exports.prototype['correlationsOverDurationsOfActionChartConfig'] = undefined;
  /**
   * Ex: 
   * @member {String} correlationsOverOnsetDelaysChartConfig
   */
  exports.prototype['correlationsOverOnsetDelaysChartConfig'] = undefined;
  /**
   * Ex: 1
   * @member {Number} numberOfUsers
   */
  exports.prototype['numberOfUsers'] = undefined;
  /**
   * Ex: 1
   * @member {Number} rawCauseMeasurementSignificance
   */
  exports.prototype['rawCauseMeasurementSignificance'] = undefined;
  /**
   * Ex: 1
   * @member {Number} rawEffectMeasurementSignificance
   */
  exports.prototype['rawEffectMeasurementSignificance'] = undefined;
  /**
   * Ex: 1
   * @member {String} reversePairsCount
   */
  exports.prototype['reversePairsCount'] = undefined;
  /**
   * Ex: 1
   * @member {Number} voteStatisticalSignificance
   */
  exports.prototype['voteStatisticalSignificance'] = undefined;
  /**
   * Ex: 0.011598441286655
   * @member {Number} aggregateQMScore
   */
  exports.prototype['aggregateQMScore'] = undefined;
  /**
   * Ex: 0.0333
   * @member {Number} forwardPearsonCorrelationCoefficient
   */
  exports.prototype['forwardPearsonCorrelationCoefficient'] = undefined;
  /**
   * Ex: 6
   * @member {Number} numberOfCorrelations
   */
  exports.prototype['numberOfCorrelations'] = undefined;
  /**
   * Ex: 1 or 0
   * @member {Number} vote
   */
  exports.prototype['vote'] = undefined;



  return exports;
}));


